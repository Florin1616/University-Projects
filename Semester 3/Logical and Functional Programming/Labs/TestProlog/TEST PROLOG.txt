%maxim_number(A,B) -> Returns the bigger number
% Mathematical model:
% maxim_number(A, B) = {
% 	A, A >= B,
% 	B, B > A }

% flow_model : (i,i)
% maxim_number(A:number, B:number)

maxim_number(A, B, A) :- A >= B.
maxim_number(A, B, B) :- A < B.

% Mathematical model:
% maxim_list(l1...ln) =
% 	l1, n = 1
% 	maxim_number(l1, maxim_list(l2...ln))
	
% maxim_list(L:list, R:number)
% flow_model : (i,i)

maxim_list([H], H).
maxim_list([H|T], R) :- 
    maxim_list(T, RM),
    maxim_number(H, RM, R).


% Mathematical model:
% replace_pos(l1...ln, e, pos) =
% 	[], n = 0
% 	pos + replace_pos(l2...ln, e, pos + 1), if l1 = e,
%   replace_pos(l2...ln, e, pos + 1), if l1 = e

% replace_pos(L:list, E:number, Pos:number, R:list)
% flow model: replace_pos(i, i, i, o)

replace_pos([], _, _, []).
replace_pos([H|T], E, Pos, [Pos|R]) :- H =:= E,
    NPos is Pos + 1,
    replace_pos(T, E, NPos, R).
replace_pos([H|T], E, Pos, R) :- H =\= E,
    NPos is Pos + 1,
    replace_pos(T, E, NPos, R).

% maxpos(L:list, R:list)
% flow model: maxpos(i, o)
main(H,R):-
	maxim_list(H, RM),
    replace_pos(H, RM, 1, R).